plugins {
    id 'java'
    id 'org.springframework.boot' version '2.0.3.RELEASE'
    id "org.jetbrains.kotlin.jvm" version "1.3.50"
    id "org.jetbrains.kotlin.plugin.serialization" version "1.3.50"
    id "org.jetbrains.kotlin.plugin.spring" version "1.3.50"
//    id 'com.devsoap.vaadin-flow' version '1.2'
}

//apply plugin: 'io.spring.dependency-management'

group 'me.shedaniel'
version '1.0-SNAPSHOT'

sourceCompatibility = targetCompatibility = 1.8
//def vaadin_version = "13.0.13"

repositories {
    jcenter()
    mavenCentral()
    maven { url "https://maven.fabricmc.net" }
    maven { url "https://jitpack.io" }
//    maven { url "https://maven.vaadin.com/vaadin-prereleases" }
//    maven { url "http://maven.vaadin.com/vaadin-addons" }
}

//vaadin {
//    productionMode = true
//    submitStatistics = false
//}

dependencies {
//    implementation "com.vaadin:vaadin-bom:$vaadin_version"
//    implementation "com.vaadin:vaadin-spring-boot-starter:$vaadin_version"
    implementation "com.google.guava:guava:28.0-jre"
    implementation "com.github.Chocohead:Tiny-Mappings-Parser:337c8b6"
    implementation('com.discord4j:discord4j-core:3.0.11') {
        force = true
    }
//    implementation('io.projectreactor:reactor-core:3.2.3.RELEASE') {
//        force = true
//    }
//    implementation('io.projectreactor.addons:reactor-extra:3.2.3.RELEASE') {
//        force = true
//    }
//    implementation "org.apache.logging.log4j:log4j-core:2.11.0"
    implementation "org.apache.commons:commons-lang3:3.9"
    implementation "com.github.shedaniel:CurseMetaAPI:0.2"
    implementation "com.github.Zeitheron:CurseForge4J:1.5.2"
//    implementation "org.eclipse.mylyn.github:org.eclipse.egit.github.core:2.1.5"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8"
    implementation "org.jetbrains.kotlinx:kotlinx-serialization-runtime:0.13.0"
    implementation "org.jetbrains.kotlin:kotlin-reflect"
}

compileKotlin {
    kotlinOptions.suppressWarnings = true
    kotlinOptions.jvmTarget = "1.8"
}

task stage(dependsOn: ['build', 'clean'])
build.mustRunAfter clean
